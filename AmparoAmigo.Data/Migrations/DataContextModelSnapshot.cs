// <auto-generated />
using System;
using AmparoAmigo.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AmparoAmigo.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("AmparoAmigo.Domain.Entities.Solicitacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CNPJ")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cidade")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .HasColumnType("TEXT");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("TEXT");

                    b.Property<string>("Responsavel")
                        .HasColumnType("TEXT");

                    b.Property<string>("TelefoneCelular")
                        .HasColumnType("TEXT");

                    b.Property<int>("VoluntarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VoluntarioId");

                    b.ToTable("Solicitacoes");
                });

            modelBuilder.Entity("AmparoAmigo.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .HasColumnType("TEXT");

                    b.Property<int>("VoluntarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VoluntarioId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "LucasBatista@gmail.com",
                            Senha = "Teste123",
                            VoluntarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "LeonardoLopez@gmail.com",
                            Senha = "Teste123",
                            VoluntarioId = 2
                        },
                        new
                        {
                            Id = 3,
                            Email = "DiegoGrava@gmail.com",
                            Senha = "Teste123",
                            VoluntarioId = 3
                        },
                        new
                        {
                            Id = 4,
                            Email = "IgorKimura@gmail.com",
                            Senha = "Teste123",
                            VoluntarioId = 4
                        },
                        new
                        {
                            Id = 5,
                            Email = "FabricioAntunes@gmail.com",
                            Senha = "Teste123",
                            VoluntarioId = 5
                        });
                });

            modelBuilder.Entity("AmparoAmigo.Domain.Entities.Voluntario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Categoria1")
                        .HasColumnType("TEXT");

                    b.Property<string>("Categoria2")
                        .HasColumnType("TEXT");

                    b.Property<string>("Categoria3")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cidade")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeCompleto")
                        .HasColumnType("TEXT");

                    b.Property<string>("TelefoneCelular")
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoServico1")
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoServico2")
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoServico3")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Voluntarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Categoria1 = "Educação",
                            Cidade = "São Paulo",
                            DataNascimento = new DateTime(1996, 11, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Leciono a 10 anos",
                            Endereco = "Rua 1",
                            Estado = "SP",
                            NomeCompleto = "Lucas Batista",
                            TelefoneCelular = "(11) 98763-6567",
                            TipoServico1 = "Professor"
                        },
                        new
                        {
                            Id = 2,
                            Categoria1 = "Geral",
                            Cidade = "Rio de Janeiro",
                            DataNascimento = new DateTime(1998, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Quero Ajudar",
                            Endereco = "Rua 2",
                            Estado = "RJ",
                            NomeCompleto = "Leonardo Lopes",
                            TelefoneCelular = "(11) 98763-6567",
                            TipoServico1 = "Ajudante Geral"
                        },
                        new
                        {
                            Id = 3,
                            Categoria1 = "Comunicação",
                            Cidade = "Governador Valadares",
                            DataNascimento = new DateTime(1986, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Leciono a 10 anos",
                            Endereco = "Rua 3",
                            Estado = "MG",
                            NomeCompleto = "Diego Grava",
                            TelefoneCelular = "(11) 98763-6567",
                            TipoServico1 = "Professor Artes"
                        },
                        new
                        {
                            Id = 4,
                            Categoria1 = "serviços Gerais",
                            Cidade = "Acrelândia",
                            DataNascimento = new DateTime(1998, 6, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "ensino musica",
                            Endereco = "Rua 4",
                            Estado = "AC",
                            NomeCompleto = "Igor Kimura",
                            TelefoneCelular = "(11) 98763-6567",
                            TipoServico1 = "Rapper"
                        },
                        new
                        {
                            Id = 5,
                            Categoria1 = "Saúde",
                            Cidade = "Florianópolis",
                            DataNascimento = new DateTime(1976, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Sou Enfermeiro a 10 anos",
                            Endereco = "Rua 5",
                            Estado = "SC",
                            NomeCompleto = "Fabricio Antunes",
                            TelefoneCelular = "(11) 98763-6567",
                            TipoServico1 = "Enfermeiro"
                        });
                });

            modelBuilder.Entity("AmparoAmigo.Domain.Entities.Solicitacao", b =>
                {
                    b.HasOne("AmparoAmigo.Domain.Entities.Voluntario", "Voluntario")
                        .WithMany()
                        .HasForeignKey("VoluntarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Voluntario");
                });

            modelBuilder.Entity("AmparoAmigo.Domain.Entities.Usuario", b =>
                {
                    b.HasOne("AmparoAmigo.Domain.Entities.Voluntario", "Voluntario")
                        .WithMany()
                        .HasForeignKey("VoluntarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Voluntario");
                });
#pragma warning restore 612, 618
        }
    }
}
